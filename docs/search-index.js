var searchIndex = JSON.parse('{\
"dev_bestia_html_templating":{"doc":"dev_bestia_html_templating","t":[0,0,14,14,0,0,3,13,13,3,13,4,8,4,3,13,4,3,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,5,11,5,5,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,5,11,11,5,5,11,5,10,5,11,5,11,5,5,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,17,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5],"n":["html_template_mod","macros_mod","s","url_u","url_utf8_mod","utils_mod","Attribute","Comment","Element","ElementNode","Html","HtmlOrSvg","HtmlServerTemplateRender","Node","PrefixForTemplateVariables","Server","ServerOrClient","SubTemplate","Svg","Text","WebBrowserClient","attr_exist","attr_text","attr_url","attributes","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","children","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","data_model_name","decode_5_xml_control_characters","decode_html_script_node","default","encode_5_xml_control_characters","encode_html_script_node","exist","extract_children_sub_templates","fill_element_node","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","into","into","into","into","into","into","into","is_self_closing","name","name","namespace","node","placeholder","render","render_html","render_sub_template","render_sub_template_match_else","render_template_raw_to_nodes","replace_with_nodes","replace_with_nodes_match_else","replace_with_string","replace_with_string_match_else","replace_with_url","replace_with_url_match_else","retain_next_node_or_attribute","retain_next_node_or_attribute_match_else","root_element_node_to_html_string","subtemplate","subtemplate_comment","tag_name","template","text","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","url_s_zero_to_empty","value","FRAGMENT","UrlPartUtf8Decoded","UrlUtf8EncodedString","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","encode_fragment","fmt","fmt","from","from","from_str","get_encoded_string","into","into","new","new_0","new_1","new_2","new_3","new_4","new_from_decoded_string","s","s","to_owned","to_owned","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","find_from","find_pos_after_delimiter","find_pos_before_delimiter","find_range_between_delimiters","find_range_including_delimiters","get_delimited_text","join_crate_version","split_crate_version"],"q":["dev_bestia_html_templating","","","","","","dev_bestia_html_templating::html_template_mod","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dev_bestia_html_templating::url_utf8_mod","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dev_bestia_html_templating::utils_mod","","","","","","",""],"d":["html templating library for html It can work on the …","","short macro <code>s!</code> for &str.to_string or format!(). because …","returns UrlUtf8EncodedString::new_x Constructor macro for …","<strong>url encoding and decoding in html</strong> This module is strictly …","small utility functions","An attribute on a DOM node, such as <code>id=\\\"my-thing\\\"</code>","comment. . The text must be not encoded. It will be xml …","An element potentially with attributes and children.","","","Svg elements are different because they have a namespace","the trait has only methods that can be implemented …","","","","The same html templating can be used on the server or on …","","","A text node. The text must be not encoded. It will be xml …","web browser client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","name of data model for debugging","private fn - decode 5 xml control characters : “ ’ & <…","in html the  element is decoded differently","","TODO: find a faster method // The standard library …","in html the  element is encoded differently","","extracts and saves sub_templates only one level deep: …","","","","","","","","","","","","","","","","","","","","","","","","","","","render for root template (not subtemplates) from string","The code for templating starts here. renders the complete …","renders sub-template","boilerplate","this is used for templates and subtemplates equally first …","returns a vector of Nodes to replace the next Node","boilerplate","returns a String to replace the next text-node or …","boilerplate","same as replace_with_string, but return url exclusively …","boilerplate","boolean : is the next node rendered or not: “wb_” or …","boilerplate","converts element node to string the attribute values and …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to string, but zero converts to empty","attribute value. The text must be not encoded. It will be …","https://url.spec.whatwg.org/#fragment-percent-encode-set","the url must be utf 8. Only the 5 control characters are …","Type UrlUtf8EncodedString explicitly informs that the …","","","","","","","","","encode fragment / part - associated fn","","","","","constructor, decodes the string from encoded str. It can …","rarely needed get encoded string","","","Constructor from encoded str Decodes the string. It can …","constructor with 0 dynamic fragment","constructor with 1 dynamic fragment","constructor with 2 dynamic fragment","constructor with 3 dynamic fragment","constructor with 4 dynamic fragment","rarely needed constructor from decoded (normal) string","private inaccessible field with encoded url","private inaccessible field - normal string - decoded","","","returns encoded string (for use in html attributes)","returns decoded string (normal string)","","","","","","","find str from pos_cursor low level panics if pos_cursor …","return the position after the delimiter or None Does NOT …","return the position before the delimiter or None Does NOT …","find and return the range of the first occurrence between …","find and return the range of the first occurrence …","returns string between the start end end delimiters …","",""],"i":[0,0,0,0,0,0,0,1,1,0,2,0,0,0,0,3,0,0,2,1,3,4,4,4,5,1,5,6,2,7,3,4,1,5,6,2,7,3,4,5,1,5,6,2,7,3,4,1,5,6,2,7,3,4,8,0,0,5,0,0,4,0,0,1,5,6,7,4,1,5,6,2,7,3,4,1,5,6,2,7,3,4,5,6,7,5,4,7,0,8,8,0,0,8,0,8,0,8,0,8,0,0,4,4,5,7,4,1,5,6,2,7,3,4,1,5,6,2,7,3,4,1,5,6,2,7,3,4,1,5,6,2,7,3,4,4,0,6,0,0,0,9,10,9,10,9,10,9,10,9,9,10,9,10,10,10,9,10,10,9,9,9,9,9,10,9,10,9,10,9,10,9,10,9,10,9,10,0,0,0,0,0,0,0,0],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["node",4]],[[],["elementnode",3]],[[],["attribute",3]],[[],["htmlorsvg",4]],[[],["subtemplate",3]],[[],["serverorclient",4]],[[],["prefixfortemplatevariables",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["string",3]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],[[],["elementnode",3]],[[["str",15]],["string",3]],[[["str",15]],["string",3]],null,[[["prefixfortemplatevariables",3],["str",15]],[["vec",3],["subtemplate",3]]],[[["elementnode",3],["str",15],["htmlorsvg",4],["usize",15],["vec",3],["prefixfortemplatevariables",3],["bool",15],["vec",3],["readerformicroxml",3]],[["option",4],["result",4]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["serverorclient",4],["str",15]],["string",3]],[[["str",15]],["string",3]],[[["prefixfortemplatevariables",3],["vec",3],["str",15]],[["node",4],["vec",3]]],[[["str",15]],[["node",4],["vec",3]]],[[["prefixfortemplatevariables",3],["str",15],["htmlorsvg",4],["usize",15]],[["vec",3],["str",15],["result",4]]],[[["str",15]],[["node",4],["vec",3]]],[[["str",15]],[["node",4],["vec",3]]],[[["usize",15],["str",15]],["string",3]],[[["str",15]],["string",3]],[[["usize",15],["str",15]],["urlutf8encodedstring",3]],[[["str",15]],["urlutf8encodedstring",3]],[[["str",15]],["bool",15]],[[["str",15]],["bool",15]],[[["elementnode",3]],[["string",3],["result",4]]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[["usize",15]],["string",3]],null,null,null,null,[[]],[[]],[[]],[[]],[[],["urlutf8encodedstring",3]],[[],["urlpartutf8decoded",3]],[[]],[[]],[[["str",15]],["string",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["str",15]],[["result",4],["error",3]]],[[],["string",3]],[[]],[[]],[[["str",15]],[["result",4],["error",3]]],[[["str",15]],["urlutf8encodedstring",3]],[[["str",15]],["urlutf8encodedstring",3]],[[["str",15]],["urlutf8encodedstring",3]],[[["str",15]],["urlutf8encodedstring",3]],[[["str",15]],["urlutf8encodedstring",3]],[[["str",15]]],null,null,[[]],[[]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["usize",15],["str",15]],[["usize",15],["option",4]]],[[["usize",15],["str",15]],[["usize",15],["option",4]]],[[["usize",15],["str",15]],[["usize",15],["option",4]]],[[["str",15],["usize",15]],[["option",4],["range",3]]],[[["str",15],["usize",15]],[["option",4],["range",3]]],[[["usize",15],["str",15]],["option",4]],[[["str",15]],["string",3]],[[["str",15]]]],"p":[[4,"Node"],[4,"HtmlOrSvg"],[4,"ServerOrClient"],[3,"PrefixForTemplateVariables"],[3,"ElementNode"],[3,"Attribute"],[3,"SubTemplate"],[8,"HtmlServerTemplateRender"],[3,"UrlUtf8EncodedString"],[3,"UrlPartUtf8Decoded"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};